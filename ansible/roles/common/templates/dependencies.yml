---
- name: Installing general dependencies
  become: yes
  apt:
    update_cache: yes
    state: present
    name:
      - python3-pip
      - wget
      - curl
      - build-essential
      - at
      - bc
      - cmake
      - ffmpeg
      - gmic
      - airspy
      - hackrf
      - imagemagick
      - wkhtmltopdf
      - jq
      - libgles-dev
      - libegl-dev
      - libatlas-base-dev
      - libopenblas-dev
      - libgfortran5
      - libjpeg-dev
      - libtiff-dev
      - libncurses5-dev
      - libncursesw5-dev
      - libsox-fmt-mp3
      - libusb-1.0-0
      - libusb-1.0-0-dev
      - libxft-dev
      - libxft2
      - libvolk2-dev
      - python3-setuptools
      - python3-idna
      - python3-jsonschema
      - python3-matplotlib
      - python3-numpy
      - python3-pil # this is really pillow
      - python3-yaml
      - python3-requests
      - python3-urllib3
      - python3-ephem
      - socat
      - sox
      - sqlite3
      - certbot
      - zlib1g-dev
      - libsqlite3-dev
      - python3-dev
      - cmake
      - build-essential
      - pkg-config
      - git
      - liblapacke-dev
      - gfortran
      - libopencv-dev
      - python3-opencv


#This was included because, for a period of time, SatDump didn't have dependencies included in the .deb file

#- name: Installing SatDump dependencies part 1
#  become: yes
#  apt:
#    update_cache: yes
#    state: present
#    name:
#      - git
#      - build-essential
#      - cmake
#      - g++
#      - pkgconf
#      - libfftw3-dev
#      - libvolk2-dev
#      - libpng-dev 
#
#- name: Installing SatDump dependencies part 2
#  become: yes
#  apt:
#    update_cache: yes
#    state: present
#    name:
#      - libnng-dev
#
#- name: Installing SatDump dependencies part 3
#  become: yes
#  apt:
#    update_cache: yes
#    state: present
#    name:
#      - librtlsdr-dev
#      - libhackrf-dev
#      - libairspy-dev
#      - libairspyhf-dev
#
#- name: Installing SatDump dependencies part 4
#  become: yes
#  apt:
#    update_cache: yes
#    state: present
#    name:
#      - libglfw3-dev
#
#- name: Installing SatDump dependencies part 5
#  become: yes
#  apt:
#    update_cache: yes
#    state: present
#    name:
#      - libzstd-dev
#
#- name: Installing SatDump dependencies part 6 (ignore if error, this dependency is optional)
#  become: yes
#  ignore_errors: yes
#  apt:
#    update_cache: yes
#    state: present
#    name:
#      - libomp-dev
#
#- name: Installing SatDump dependencies part 7 (ignore if error, this dependency is optional)
#  become: yes
#  ignore_errors: yes
#  apt:
#    update_cache: yes
#    state: present
#    name:
#      - ocl-icd-opencl-dev
#
#- name: Installing SatDump dependencies part 8 (ignore if error, this dependency is optional)
#  become: yes
#  ignore_errors: yes
#  apt:
#    update_cache: yes
#    state: present
#    name:
#      - intel-opencl-icd

#- name: Install required Python packages using pip3
#  pip:
#    name:
#      - envbash==1.2.0
#      - facebook-sdk==3.1.0
#      - pysqlite3==0.5.1
#    state: present
#    executable: pip3

- name: Install required Python packages using pip3 since they aren't available among the apt packages
  command: pip3 install envbash==1.2.0 facebook-sdk==3.1.0 pysqlite3==0.5.1 --break-system-packages
  when: raspbian_version.stdout == 'bookworm'

- name: Install required Python packages using pip3
  pip:
    name:
      - envbash==1.2.0
      - facebook-sdk==3.1.0
      - pysqlite3==0.5.1
    state: present
    executable: pip3
  when: raspbian_version.stdout == 'bullseye'

- name: Installing predict on PCs
  become: yes
  apt:
    deb: "{{ noaa_home }}/software/predict_2.2.3-4-b2_amd64.deb"
    state: present
    update_cache: no
  when: system_architecture == 'amd64'

- name: Installing predict on Raspberry Pi
  become: yes
  apt:
    deb: "{{ noaa_home }}/software/predict_2.2.5+dfsg.1-1_armhf.deb"
    state: present
    update_cache: no
  when: system_architecture == 'armhf'
  
- name: Installing predict on Raspberry Pi
  become: yes
  apt:
    deb: "{{ noaa_home }}/software/predict_2.2.5+dfsg.1-1_arm64.deb"
    state: present
    update_cache: no
  when: system_architecture == 'arm64'
  
- name: Installing SatDump
  become: yes
  apt:
    deb: "{{ noaa_home }}/software/satdump_1.2.1-d5fd2f41_{{ raspbian_version.stdout }}_{{ system_architecture }}.deb"
    state: present
    update_cache: no

- name: Installing WXtoImg
  become: yes
  apt:
    deb: "{{ noaa_home }}/software/wxtoimg-{{ system_architecture }}-2.11.2-beta.deb"
    state: present
    update_cache: no

#- name: Installing MeteorDemod
#  become: yes
#  apt:
#    deb: "https://github.com/Digitelektro/MeteorDemod/releases/download/2.5.6-beta/meteordemod_2.5.6_{{ system_architecture }}.deb"
#    state: present
#    update_cache: no

- name: Check if MeteorDemod is installed
  stat:
    path: /usr/local/bin/meteordemod
  register: meteor_demod_installed
  changed_when: false

- name: Clone MeteorDemod repository if not installed
  git:
    repo: https://github.com/Digitelektro/MeteorDemod.git
    dest: /home/{{ target_user }}/MeteorDemod
    version: origin/master
    depth: 1
  when: meteor_demod_installed.stat.exists is not defined or meteor_demod_installed.stat.exists == False
  ignore_errors: yes

- name: Update MeteorDemod submodules
  command: git submodule update --init --recursive
  args:
    chdir: /home/{{ target_user }}/MeteorDemod
  when: meteor_demod_installed.stat.exists is not defined or meteor_demod_installed.stat.exists == False

- name: Create build directory
  file:
    path: /home/{{ target_user }}/MeteorDemod/build
    state: directory
  when: meteor_demod_installed.stat.exists is not defined or meteor_demod_installed.stat.exists == False

- name: Build MeteorDemod
  command: cmake ../
  args:
    chdir: /home/{{ target_user }}/MeteorDemod/build
  when: meteor_demod_installed.stat.exists is not defined or meteor_demod_installed.stat.exists == False

- name: Configure the OpenCV library path
  become: yes
  command: ldconfig
  when: meteor_demod_installed.stat.exists is not defined or meteor_demod_installed.stat.exists == False

- name: Make MeteorDemod
  command: make -j4
  args:
    chdir: /home/{{ target_user }}/MeteorDemod/build
  when: meteor_demod_installed.stat.exists is not defined or meteor_demod_installed.stat.exists == False

- name: Install MeteorDemod
  become: yes
  command: make install
  args:
    chdir: /home/{{ target_user }}/MeteorDemod/build
  when: meteor_demod_installed.stat.exists is not defined or meteor_demod_installed.stat.exists == False

- name: Set ownership of configuration directory
  become: yes
  file:
    path: /home/{{ target_user }}/.config/meteordemod
    owner: "{{ target_user }}"
    group: "{{ target_user }}"
    recurse: yes
  when: meteor_demod_installed.stat.exists is not defined or meteor_demod_installed.stat.exists == False

- name: Clean up
  file:
    path: /home/{{ target_user }}/MeteorDemod
    state: absent
  when: meteor_demod_installed.stat.exists is not defined or meteor_demod_installed.stat.exists == False

# - name: Check if libbrcmGLESV2.50 link exists
#   stat:
#     path: /usr/lib/libbrcmGLESV2.50
#   register: libGLESV2_link
#   ignore_errors: yes

# - name: Create symbolic link for libGLESV2.so
#   command: ln -s /usr/lib/arm-linux-gnueabihf/libGLESV2.so /usr/lib/libbrcmGLESV2.50
#   become: yes
#   when: not libGLESV2_link.stat.exists and system_architecture == 'armhf'

# - name: Check if libbrcmEGL.so link exists
#   stat:
#     path: /usr/lib/libbrcmEGL.so
#   register: libEGL_link
#   ignore_errors: yes

# - name: Create symbolic link for libEGL.so
#   command: ln -s /usr/lib/arm-linux-gnueabihf/libEGL.so /usr/lib/libbrcmEGL.so
#   become: yes
#   when: not libEGL_link.stat.exists and system_architecture == 'armhf'

# - name: Installing AnyDesk remote desktop
#   become: yes
#   apt:
#     deb: "{{ noaa_home }}/software/anydesk_6.3.0-1_{{ system_architecture }}.deb"
#     state: present
#     update_cache: no
...
